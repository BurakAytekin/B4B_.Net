

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head id="headGaranti3D">
    <title></title>

</head>
@Styles.Render("~/bundles/css")
@using System.Security.Cryptography
@using System.Text
@using B2b.Web.v4.Models.EntityLayer
@using B2b.Web.v4.Models.Helper
@using B2b.Web.v4.Models.Log.EPayment

@functions {

    private string GenerateOrderId()
    {
        long i = 1;
        foreach (byte b in Guid.NewGuid().ToByteArray())
        {
            i *= ((int)b + 1);
        }
        return string.Format("{0:x}", i - DateTime.Now.Ticks);

    }

    public string GetSHA1(string SHA1Data)
    {
        SHA1 sha = new SHA1CryptoServiceProvider();
        string HashedPassword = SHA1Data;
        byte[] hashbytes = Encoding.GetEncoding("ISO-8859-9").GetBytes(HashedPassword);
        byte[] inputbytes = sha.ComputeHash(hashbytes);
        return GetHexaDecimal(inputbytes);
    }

    public string GetHexaDecimal(byte[] bytes)
    {
        StringBuilder s = new StringBuilder();
        int length = bytes.Length;
        for (int n = 0; n <= length - 1; n++)
        {
            s.Append(String.Format("{0,2:x}", bytes[n]).Replace(" ", "0"));
        }
        return s.ToString();
    }

}
@{ PosBankDetail PosBankDetails = (PosBankDetail)HttpContext.Current.Session["PosBankDetails"]; }
@{ PosPaymentValue PosPaymentValue = (PosPaymentValue)HttpContext.Current.Session["PosPaymentValue"]; }
@{
    string pan = PosPaymentValue.CardNumber;
    string cv2 = PosPaymentValue.Cvc;
    string Ecom_Payment_Card_ExpDate_Year = PosPaymentValue.ExpYear.Trim();
    string Ecom_Payment_Card_ExpDate_Month = PosPaymentValue.ExpMounth.Trim();
    string installment = PosPaymentValue.Installment.ToString();
    string amount = PosPaymentValue.TotalPrice.ToString("N2");
    string totalPonus = PosPaymentValue.ExpendableBonus.ToString();
    if (amount.Contains(",") || amount.Contains("."))
    {
        amount = amount.Replace(",", "");
        amount = amount.Replace(".", "");
        amount = amount.Trim();
    }
    if (installment == "1")
    {
        installment = "";
    }

    if (totalPonus.Contains(",") || totalPonus.Contains("."))
    {
        totalPonus = totalPonus.Replace(",", "");
        totalPonus = totalPonus.Replace(".", "");
        totalPonus = totalPonus.Trim();
    }

    if (installment == "1")
    {
        installment = "";
    }

    string strMode = "PROD";
    string strApiVersion = "v0.01";
    string strTerminalProvUserID = "PROVAUT";
    string strType = "sales";
    string strAmount = amount; //İşlem Tutarı 1.00 TL için 100 gönderilmeli
    string strCurrencyCode = "949";
    string strInstallmentCount = installment; //Taksit Sayısı. Boş gönderilirse taksit yapılmaz
    string strTerminalUserID = PosBankDetails.ApiUser;
    if (strTerminalUserID.Contains("-") || strTerminalUserID.Contains(" ") || strTerminalUserID.Contains(".") || strTerminalUserID.Contains(",") || strTerminalUserID.Contains("!") || strTerminalUserID.Contains("#") || strTerminalUserID.Contains("&") || strTerminalUserID.Contains("(") || strTerminalUserID.Contains(")") || strTerminalUserID.Contains("?"))
    {
        strTerminalUserID = strTerminalUserID.Replace("-", "");
        strTerminalUserID = strTerminalUserID.Replace(" ", "");
        strTerminalUserID = strTerminalUserID.Replace(".", "");
        strTerminalUserID = strTerminalUserID.Replace(",", "");
        strTerminalUserID = strTerminalUserID.Replace("!", "");
        strTerminalUserID = strTerminalUserID.Replace("#", "");
        strTerminalUserID = strTerminalUserID.Replace("&", "");
        strTerminalUserID = strTerminalUserID.Replace("(", "");
        strTerminalUserID = strTerminalUserID.Replace(")", "");
        strTerminalUserID = strTerminalUserID.Replace("?", "");
    }
    if (strTerminalUserID.Length > 32)
    {
        strTerminalUserID = strTerminalUserID.Substring(0, 32);
    }

    string strOrderID = GenerateOrderId();
    Session["orderID"] = strOrderID;

    string strCustomeripaddress = "212.253.125.106";
    string strTerminalID = PosBankDetails.TerminalNo; //8 Haneli TerminalID yazılmalı.
    string _strTerminalID = "0" + strTerminalID;
    string strTerminalMerchantID = PosBankDetails.StoreNumber; //Üye İşyeri Numarası
    string strStoreKey = PosBankDetails._3dSecureKey; //3D Secure şifresi // 57QDxKuYCP33yH24q53XLAF7f8R76a
    string strProvisionPassword = PosBankDetails.Password; //TerminalProvUserID şifresi
    string strSuccessURL = Request.Url.Scheme + "://" + Request.Url.Authority + "/Payment/Garanti3DP";
    string strErrorURL = Request.Url.Scheme + "://" + Request.Url.Authority + "/Payment/Error?paymentId=" + PosPaymentValue.PaymentId;
    string SecurityData = GetSHA1(strProvisionPassword + _strTerminalID).ToUpper();
    string HashData = GetSHA1(strTerminalID + strOrderID + strAmount + strSuccessURL + strErrorURL + strType + strInstallmentCount + strStoreKey + SecurityData).ToUpper();
    string postAdress = PosBankDetails.PosBank.PostUrl;

    EPaymentLog log = new EPaymentLog(PosPaymentValue, "", "", "", "", "", "", 98); //98 işlemin bankaya gittiğini gösterir
    EPaymentLogger.LogDB(log, "/api/payment/updatestatus");
    /* Form Post Ediliyor.*/


}
<div style="display: flex; justify-content: center; align-items: center;">
    <div class="loader" style="margin: 5px;"></div>
    <h2>İşleminiz Yapılıyor Lütfen Bekleyiniz.</h2>

</div>
<body>
    <form id="sanalposform" method="post" action="@postAdress">
        <input type="hidden" name="cardnumber" id="cardnumber" value="@pan" />
        <input type="hidden" name="cardexpiredatemonth" id="cardexpiredatemonth" value="@Ecom_Payment_Card_ExpDate_Month" />
        <input type="hidden" name="cardexpiredateyear" id="cardexpiredateyear" value="@Ecom_Payment_Card_ExpDate_Year" />
        <input type="hidden" name="cardcvv2" id="cardcvv2" value="@cv2" />
        <input type="hidden" name="mode" id="mode" value="@strMode" />
        <input type="hidden" name="storeType" id="storeType" />
        <input type="hidden" name="secure3dsecuritylevel" id="secure3dsecuritylevel" value="3D" />
        <input type="hidden" name="apiversion" id="apiversion" value="@strApiVersion" />
        <input type="hidden" name="terminalprovuserid" id="terminalprovuserid" value="@strTerminalProvUserID" />
        <input type="hidden" name="terminaluserid" id="terminaluserid" value="@strTerminalUserID" />
        <input type="hidden" name="terminalmerchantid" id="terminalmerchantid" value="@strTerminalMerchantID" />
        <input type="hidden" name="txntype" id="txntype" value="@strType" />
        <input type="hidden" name="txnamount" id="txnamount" value="@strAmount" />
        <input type="hidden" name="txncurrencycode" id="txncurrencycode" value="@strCurrencyCode" />
        <input type="hidden" name="txninstallmentcount" id="txninstallmentcount" value="@strInstallmentCount" />
        <input type="hidden" name="orderid" id="orderid" value="@strOrderID" />
        <input type="hidden" name="terminalid" id="terminalid" value="@strTerminalID" />
        <input type="hidden" name="successurl" id="successurl" value="@strSuccessURL" />
        <input type="hidden" name="errorurl" id="errorurl" value="@strErrorURL" />
        <input type="hidden" name="customeripaddress" id="customeripaddress" value="@strCustomeripaddress" />
        <input type="hidden" name="secure3dhash" id="secure3dhash" value="@HashData"/>
        @if (PosPaymentValue.UseBonus)
        {
            <input type="hidden" name="txnrewardcount" id="txnrewardcount" value="1"><br>
            <input type="hidden" name="txnrewardtype1" id="txnrewardtype1" value="BNS"><br>
            <input type="hidden" name="txnrewardusedamount1" id="txnrewardusedamount1" value="@totalPonus"><br>
        }
      

    </form>
</body>
</html>
<script type="text/javascript">
    function hideformfunc() {
        var frm = document.getElementById("sanalposform");
        frm.submit();
    }
    window.onload = hideformfunc;
</script>